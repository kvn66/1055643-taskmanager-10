{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/board.js","webpack:///./src/components/filter.js","webpack:///./src/components/load-more-button.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/task-edit.js","webpack:///./src/components/task.js","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/filter.js","webpack:///./src/mock/task.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AACA,SAAS,YAAY;;AAErB;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA,UAAU;AACV;AACA,4BAA4B,KAAK;AACjC,UAAU,KAAK,wBAAwB,KAAK,UAAU,MAAM;AAC5D;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAsD;AACf;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,wDAAwD,MAAM;AAC9D;AACA,mBAAmB,MAAM;AACzB,YAAY;AACZ;AACA;AACA,uBAAuB,MAAM;AAC7B,4CAA4C,MAAM;AAClD,aAAa,MAAM;AACnB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,mBAAmB,IAAI;AACvB,YAAY;AACZ;AACA,sDAAsD,IAAI;AAC1D,aAAa,IAAI;AACjB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP,SAAS,iDAAiD;AAC1D;AACA;AACA,kCAAkC,kBAAkB,GAAG,qDAAW,qBAAqB;AACvF,+BAA+B,4DAAU;;AAEzC;AACA;AACA;;AAEA;AACA,0CAA0C,gDAAM;AAChD,wDAAwD,8CAAI;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,GAAG,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;;AAGA;AACA,6CAA6C,MAAM,GAAG,YAAY,GAAG,cAAc;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,6BAA6B;AACzF;;AAEA,oBAAoB;;AAEpB;AACA,+DAA+D,+BAA+B;AAC9F;;AAEA,oBAAoB;;AAEpB;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9KA;AAAA;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP,SAAS,iDAAiD;;AAE1D;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,qDAAW,qBAAqB;AACvF,+BAA+B,4DAAU;;AAEzC;AACA;AACA;;AAEA;AACA,kCAAkC,MAAM,GAAG,YAAY,GAAG,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAO;;AAEA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACE;AACkB;AACb;AACT;AACS;AACpB;AACI;AACC;;AAElD;AACA;AACA;;AAEA;AACA;AACA,wDAAM,oBAAoB,uFAAsB;;AAEhD,gBAAgB,uEAAe;AAC/B,wDAAM,kBAAkB,kFAAoB;AAC5C,wDAAM,kBAAkB,gFAAmB;;AAE3C;AACA,cAAc,mEAAa;AAC3B,wDAAM,kBAAkB,uFAAsB;;AAE9C;AACA,oDAAoD,wDAAM,kBAAkB,8EAAkB;;AAE9F;AACA,wDAAM,eAAe,oGAA4B;;AAEjD;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wDAAM,kBAAkB,8EAAkB;;AAEjE;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEyB;;;;;;;;;;;;;ACbzB;AAAA;AAAA;AAAA;AAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gDAAM;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEqC;;;;;;;;;;;;;AC9ErC;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA,0BAA0B,MAAM;AAChC;AACO;AACP;AACA;AACA;;AAEA,YAAY,MAAM,GAAG,QAAQ,GAAG,SAAS;AACzC;;AAEO;AACP;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const createBoardTemplate = () => {\n  return (\n    `<section class=\"board container\">\n        <div class=\"board__filter-list\">\n          <a href=\"#\" class=\"board__filter\">SORT BY DEFAULT</a>\n          <a href=\"#\" class=\"board__filter\">SORT BY DATE up</a>\n          <a href=\"#\" class=\"board__filter\">SORT BY DATE down</a>\n        </div>\n\n        <div class=\"board__tasks\"></div>\n      </section>`\n  );\n};\n","const createFilterMarkup = (filter, isChecked) => {\n  const {name, count} = filter;\n\n  return (\n    `<input\n        type=\"radio\"\n        id=\"filter__${name}\"\n        class=\"filter__input visually-hidden\"\n        name=\"filter\"\n        ${isChecked ? `checked` : ``}\n      />\n      <label for=\"filter__${name}\" class=\"filter__label\">\n        ${name} <span class=\"filter__${name}-count\">${count}</span>\n      </label>`\n  );\n};\n\nexport const createFilterTemplate = (filters) => {\n  const filtersMarkup = filters.map((it, i) => createFilterMarkup(it, i === 0)).join(`\\n`);\n\n  return (\n    `<section class=\"main__filter filter container\">\n      ${filtersMarkup}\n    </section>`\n  );\n};\n","export const createLoadMoreButtonTemplate = () => {\n  return (\n    `<button class=\"load-more\" type=\"button\">load more</button>`\n  );\n};\n","export const createSiteMenuTemplate = () => {\n  return (\n    `<section class=\"control__btn-wrap\">\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__new-task\"\n        class=\"control__input visually-hidden\"\n      />\n      <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n        >+ ADD NEW TASK</label\n      >\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__task\"\n        class=\"control__input visually-hidden\"\n        checked\n      />\n      <label for=\"control__task\" class=\"control__label\">TASKS</label>\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__statistic\"\n        class=\"control__input visually-hidden\"\n      />\n      <label for=\"control__statistic\" class=\"control__label\"\n        >STATISTICS</label\n      >\n    </section>`\n  );\n};\n","import {COLORS, DAYS, MONTH_NAMES} from '../const.js';\nimport {formatTime} from '../utils.js';\n\nconst createColorsMarkup = (colors, currentColor) => {\n  return colors\n    .map((color) => {\n      return (\n        `<input\n          type=\"radio\"\n          id=\"color-${color}-4\"\n          class=\"card__color-input card__color-input--${color} visually-hidden\"\n          name=\"color\"\n          value=\"${color}\"\n          ${currentColor === color ? `checked` : ``}\n        />\n        <label\n          for=\"color-${color}-4\"\n          class=\"card__color card__color--${color}\"\n          >${color}</label\n        >`\n      );\n    })\n    .join(`\\n`);\n};\n\nconst createRepeatingDaysMarkup = (days, repeatingDays) => {\n  return days\n    .map((day) => {\n      const isChecked = repeatingDays[day];\n      return (\n        `<input\n          class=\"visually-hidden card__repeat-day-input\"\n          type=\"checkbox\"\n          id=\"repeat-${day}-4\"\n          name=\"repeat\"\n          value=\"${day}\"\n          ${isChecked ? `checked` : ``}\n        />\n        <label class=\"card__repeat-day\" for=\"repeat-${day}-4\"\n          >${day}</label\n        >`\n      );\n    })\n    .join(`\\n`);\n};\n\nconst createHashtags = (tags) => {\n  return Array.from(tags)\n    .map((tag) => {\n      return (\n        `<span class=\"card__hashtag-inner\">\n          <input\n            type=\"hidden\"\n            name=\"hashtag\"\n            value=${tag}\n            class=\"card__hashtag-hidden-input\"\n          />\n          <p class=\"card__hashtag-name\">\n            #${tag}\n          </p>\n          <button\n              type=\"button\"\n              class=\"card__hashtag-delete\"\n          >\n            delete\n          </button>\n        </span>`\n      );\n    })\n    .join(`\\n`);\n};\n\nexport const createTaskEditTemplate = (task) => {\n  const {description, tags, dueDate, color, repeatingDays} = task;\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n  const isRepeatingTask = Object.values(repeatingDays).some(Boolean);\n  const repeatClass = isRepeatingTask ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  const tagsMarkup = createHashtags(tags);\n  const colorsMarkup = createColorsMarkup(COLORS, color);\n  const repeatingDaysMarkup = createRepeatingDaysMarkup(DAYS, repeatingDays);\n\n  const dateShowing = `<fieldset class=\"card__date-deadline\">\n                        <label class=\"card__input-deadline-wrap\">\n                          <input\n                            class=\"card__date\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            name=\"date\"\n                            value=\"${date} ${time}\"\n                          />\n                        </label>\n                      </fieldset>`;\n  const repeatingTask = `<fieldset class=\"card__repeat-days\">\n                          <div class=\"card__repeat-days-inner\">\n                            ${repeatingDaysMarkup}\n                          </div>\n                        </fieldset>`;\n\n\n  return (\n    `<article class=\"card card--edit card--${color} ${repeatClass} ${deadlineClass}\">\n      <form class=\"card__form\" method=\"get\">\n        <div class=\"card__inner\">\n          <div class=\"card__color-bar\">\n              <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                <use xlink:href=\"#wave\"></use>\n              </svg>\n            </div>\n  \n            <div class=\"card__textarea-wrap\">\n              <label>\n                <textarea\n                  class=\"card__text\"\n                  placeholder=\"Start typing your text here...\"\n                  name=\"text\"\n                >${description}</textarea>\n              </label>\n            </div>\n  \n            <div class=\"card__settings\">\n              <div class=\"card__details\">\n                <div class=\"card__dates\">\n                  <button class=\"card__date-deadline-toggle\" type=\"button\">\n                    date: <span class=\"card__date-status\">${isDateShowing ? `yes` : `no`}</span>\n                  </button>\n  \n                  ${ isDateShowing ? dateShowing : ``}\n  \n                  <button class=\"card__repeat-toggle\" type=\"button\">\n                    repeat:<span class=\"card__repeat-status\">${isRepeatingTask ? `yes` : `no`}</span>\n                  </button>\n  \n                  ${ isRepeatingTask ? repeatingTask : ``}\n                  \n                </div>\n  \n                <div class=\"card__hashtag\">\n                  <div class=\"card__hashtag-list\">\n                    ${tagsMarkup}\n                  </div>\n  \n                  <label>\n                    <input\n                      type=\"text\"\n                      class=\"card__hashtag-input\"\n                      name=\"hashtag-input\"\n                      placeholder=\"Type new hashtag here\"\n                    />\n                  </label>\n                </div>\n              </div>\n  \n              <div class=\"card__colors-inner\">\n                <h3 class=\"card__colors-title\">Color</h3>\n                <div class=\"card__colors-wrap\">\n                  ${colorsMarkup}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card__status-btns\">\n              <button class=\"card__save\" type=\"submit\">save</button>\n              <button class=\"card__delete\" type=\"button\">delete</button>\n            </div>\n          </div>\n         </form>\n      </article>`\n  );\n};\n","import {MONTH_NAMES} from '../const.js';\nimport {formatTime} from '../utils.js';\n\nconst createHashtagsMarkup = (hashtags) => {\n  return hashtags\n    .map((hashtag) => {\n      return (\n        `<span class=\"card__hashtag-inner\">\n            <span class=\"card__hashtag-name\">\n              #${hashtag}\n            </span>\n          </span>`\n      );\n    })\n    .join(`\\n`);\n};\n\nexport const createTaskTemplate = (task) => {\n  const {description, tags, dueDate, color, repeatingDays} = task;\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n  const hashtags = createHashtagsMarkup(Array.from(tags));\n  const repeatClass = Object.values(repeatingDays).some(Boolean) ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  return (\n    `<article class=\"card card--${color} ${repeatClass} ${deadlineClass}\">\n      <div class=\"card__form\">\n        <div class=\"card__inner\">\n          <div class=\"card__control\">\n            <button type=\"button\" class=\"card__btn card__btn--edit\">\n              edit\n            </button>\n            <button type=\"button\" class=\"card__btn card__btn--archive\">\n              archive\n            </button>\n            <button\n              type=\"button\"\n              class=\"card__btn card__btn--favorites card__btn--disabled\"\n            >\n              favorites\n            </button>\n          </div>\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n          <div class=\"card__textarea-wrap\">\n            <p class=\"card__text\">${description}</p>\n          </div>\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <div class=\"card__date-deadline\">\n                  <p class=\"card__input-deadline-wrap\">\n                    <span class=\"card__date\">${date}</span>\n                    <span class=\"card__time\">${time}</span>\n                  </p>\n                </div>\n              </div>\n              <div class=\"card__hashtag\">\n                <div class=\"card__hashtag-list\">\n                  ${hashtags}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </article>`\n  );\n};\n","export const COLORS = [`black`, `yellow`, `blue`, `green`, `pink`];\n\nexport const DAYS = [`mo`, `tu`, `we`, `th`, `fr`, `sa`, `su`];\n\nexport const MONTH_NAMES = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `July`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n","import {createBoardTemplate} from './components/board.js';\nimport {createFilterTemplate} from './components/filter.js';\nimport {createLoadMoreButtonTemplate} from './components/load-more-button.js';\nimport {createTaskEditTemplate} from './components/task-edit.js';\nimport {createTaskTemplate} from './components/task.js';\nimport {createSiteMenuTemplate} from './components/site-menu.js';\nimport {generateTasks} from './mock/task.js';\nimport {generateFilters} from './mock/filter.js';\nimport {render, RenderPosition} from './utils.js';\n\nconst TASK_COUNT = 22;\nconst SHOWING_TASKS_COUNT_ON_START = 8;\nconst SHOWING_TASKS_COUNT_BY_BUTTON = 8;\n\nconst siteMainElement = document.querySelector(`.main`);\nconst siteHeaderElement = siteMainElement.querySelector(`.main__control`);\nrender(siteHeaderElement, createSiteMenuTemplate(), `beforeend`);\n\nconst filters = generateFilters();\nrender(siteMainElement, createFilterTemplate(filters), `beforeend`);\nrender(siteMainElement, createBoardTemplate(), `beforeend`);\n\nconst taskListElement = siteMainElement.querySelector(`.board__tasks`);\nconst tasks = generateTasks(TASK_COUNT);\nrender(taskListElement, createTaskEditTemplate(tasks[0]), `beforeend`);\n\nlet showingTasksCount = SHOWING_TASKS_COUNT_ON_START;\ntasks.slice(1, showingTasksCount).forEach((task) => render(taskListElement, createTaskTemplate(task), `beforeend`));\n\nconst boardElement = siteMainElement.querySelector(`.board`);\nrender(boardElement, createLoadMoreButtonTemplate(), `beforeend`);\n\nconst loadMoreButton = boardElement.querySelector(`.load-more`);\nloadMoreButton.addEventListener(`click`, () => {\n  const prevTasksCount = showingTasksCount;\n  showingTasksCount = showingTasksCount + SHOWING_TASKS_COUNT_BY_BUTTON;\n\n  tasks.slice(prevTasksCount, showingTasksCount)\n    .forEach((task) => render(taskListElement, createTaskTemplate(task), `beforeend`));\n\n  if (showingTasksCount >= tasks.length) {\n    loadMoreButton.remove();\n  }\n});\n","const filterNames = [\n  `all`, `overdue`, `today`, `favorites`, `repeating`, `tags`, `archive`\n];\n\nconst generateFilters = () => {\n  return filterNames.map((it) => {\n    return {\n      name: it,\n      count: Math.floor(Math.random() * 10),\n    };\n  });\n};\n\nexport {generateFilters};\n","import {COLORS} from '../const.js';\n\nconst DescriptionItems = [\n  `Изучить теорию`,\n  `Сделать домашку`,\n  `Пройти интенсив на соточку`,\n];\n\nconst DefaultRepeatingDays = {\n  'mo': false,\n  'tu': false,\n  'we': false,\n  'th': false,\n  'fr': false,\n  'sa': false,\n  'su': false,\n};\n\nconst Tags = [\n  `homework`,\n  `theory`,\n  `practice`,\n  `intensive`,\n  `keks`\n];\n\nconst getRandomArrayItem = (array) => {\n  const randomIndex = getRandomIntegerNumber(0, array.length - 1);\n\n  return array[randomIndex];\n};\n\nconst getRandomIntegerNumber = (min, max) => {\n  return min + Math.floor((max - min) * Math.random());\n};\n\nconst getRandomDate = () => {\n  const targetDate = new Date();\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  const diffValue = sign * getRandomIntegerNumber(0, 7);\n\n  targetDate.setDate(targetDate.getDate() + diffValue);\n\n  return targetDate;\n};\n\nconst generateRepeatingDays = () => {\n  return Object.assign({}, DefaultRepeatingDays, {\n    'mo': Math.random() > 0.5,\n  });\n};\n\nconst generateTags = (tags) => {\n  return tags\n    .filter(() => Math.random() > 0.5)\n    .slice(0, 3);\n};\n\nconst generateTask = () => {\n  const dueDate = Math.random() > 0.5 ? null : getRandomDate();\n\n  return {\n    description: getRandomArrayItem(DescriptionItems),\n    dueDate,\n    repeatingDays: dueDate ? DefaultRepeatingDays : generateRepeatingDays(),\n    tags: new Set(generateTags(Tags)),\n    color: getRandomArrayItem(COLORS),\n    isFavorite: Math.random() > 0.5,\n    isArchive: Math.random() > 0.5,\n  };\n};\n\nconst generateTasks = (count) => {\n  return new Array(count)\n    .fill(``)\n    .map(generateTask);\n};\n\nexport {generateTask, generateTasks};\n","export const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nconst castTimeFormat = (value) => {\n  return value < 10 ? `0${value}` : String(value);\n};\nexport const formatTime = (date) => {\n  const hours = castTimeFormat(date.getHours() % 12);\n  const minutes = castTimeFormat(date.getMinutes());\n  const interval = date.getHours() > 11 ? `pm` : `am`;\n\n  return `${hours}:${minutes} ${interval}`;\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const render = (container, element, place) => {\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(element);\n      break;\n  }\n};\n"],"sourceRoot":""}